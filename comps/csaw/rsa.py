n = 89925083429000250956071543309147117600297355717005995104512271033900252128276333791239732596415562259825393563915348302779504747899697069731333618606376642672761101242754503064252271815401640930459264732192793146073504553820658181557697569428251011620834010095965682270481512041510362470480804693608210335721
import math
m = math.sqrt(n)
phi = (m-1) * (m-1)
e = 14178554930497964035702258690760724891913793944823220000954861029570026503019
x, y = 0, 1
 
# Function for extended Euclidean Algorithm
def gcdExtended(a, b):
    global x, y
 
    # Base Case
    if (a == 0):
        x = 0
        y = 1
        return b
 
    # To store results of recursive call
    gcd = gcdExtended(b % a, a)
    x1 = x
    y1 = y
 
    # Update x and y using results of recursive
    # call
    x = y1 - (b // a) * x1
    y = x1
 
    return gcd
